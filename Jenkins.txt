pipeline {
    agent any
    stages {
	    stage('Clone'){
	        steps{
        		bat("""
		            git clone https://github.com/hw2cb/jeknkins.git
		            """)
	        }
	    }
	    stage('Build') {
            	steps {
                	bat ('C:\\Users\\Administrator\\AppData\\Local\\Jenkins\\.jenkins\\workspace\\MyJob\\build.bat')
		}
            }
            stage('Start test'){
	    	steps{
			dir('C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\Common7\\IDE\\Extensions\\TestPlatform\\')
			{
				bat('vstest.console.exe C:\\Results\\bin\\JenkinsTest\\JenkinsMsTest.dll --logger:"trx;LogFileName=custom_file_name.trx" --ResultsDirectory:C:\\Results')
			}
		}
	    }
	    stage('Archive'){
		environment{
			VER = '${BUILD_NUMBER}'
		}
                steps{
			dir('C:\\'){
				echo "Current build: ${BUILD_NUMBER}"
				zip zipFile: "${BUILD_NUMBER}.zip", archive:false, dir: 'Results'
				archiveArtifacts artifacts: "${BUILD_NUMBER}.zip"
			}
		}
	    }
	    stage('Deploy'){
		steps{
			dir('C:\\'){
				script{
					try
					{
						bat("md C:\\Deploy\\")
					}catch(Exception e){}
				}
				unzip zipFile: "${BUILD_NUMBER}.zip", dir: 'C:\\Deploy'
			}
		}
	    }
    }
    post {
	  always{
		emailext attachLog: true, body: '''$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:
		Check console output at $BUILD_URL to view the results. ${JELLY_SCRIPT, template="html"}''', subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!', to: 'dim5.dim5.960@mail.ru'
	  }
          cleanup {
              cleanWs()
          }
   }
}
